     <Application x:Class="LibraryProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LibraryProject"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!--Small Buttons-->
        
        <Style x:Key ="smallbuttons.close" TargetType="Button">
             <Setter Property="Foreground" Value="DarkBlue"/>
             <Setter Property="Width" Value="45"/>
             <Setter Property="FontSize" Value="9"/>
             <Setter Property="FontWeight" Value="Bold"/>
             <Setter Property="Background" Value="Red"/>
             <Setter Property="BorderThickness" Value="0,0,0,0"/>
             
             <Setter Property="Template">
                 <Setter.Value>
                         <ControlTemplate TargetType="Button">
                         <Border Name="border"
                                 BorderThickness="1,0,0,1"
                                 BorderBrush="Gray"
                                 Background="{x:Null}">
                             <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                         </Border>
                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white"/>
                                <Setter TargetName="border" Property="Background" Value="red"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>


                    </ControlTemplate>
                 </Setter.Value>
             </Setter>
         </Style>
        
        <Style x:Key ="smallbutton.max" TargetType="Button">
            <Setter Property="Foreground" Value="DarkBlue"/>
            <Setter Property="Width" Value="45"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                 BorderThickness="1,0,0,1"
                                 BorderBrush="Gray"
                                 Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white"/>
                                <Setter TargetName="border" Property="Background" Value="green"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key ="smallbuttons.min" TargetType="Button">
            <Setter Property="Foreground" Value="DarkBlue"/>
            <Setter Property="Width" Value="45"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                 BorderThickness="1,0,0,1"
                                 BorderBrush="Gray"
                                 Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white"/>
                                <Setter TargetName="border" Property="Background" Value="yellow"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Menu Buttons-->
        <!-- Source: https://stackoverflow.com/questions/27337819/wpf-togglebutton-xaml-styling-->
        <Style x:Key ="menubuttons" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="DarkBlue"/>
            <Setter Property="Margin" Value="0,0,0,3"/>  <!--aradaki ince çizgi-->


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border"
                                 BorderThickness="2,0,0,0"
                                 BorderBrush="White"
                                 Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2b5493"/>
                                <Setter TargetName="border" Property="Background" Value="#2b5493"/>  <!--üstüne gelindiğinde arka rengi değiştirme-->
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="green"/> <!--tıklayınca sol kenardaki yeşil kısım-->
                                <Setter TargetName="border" Property="Background" Value="#2b5493"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--User Control Buttons-->
        <!-- Source:https://stackoverflow.com/questions/17630968/wpf-c-sharp-button-style-->
        
        <Style x:Key ="userControlAddStyle" TargetType="Button">
            <Setter Property="Foreground" Value="#ff3691d1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="FontSize" Value ="9"/>
            <Setter Property="Margin" Value ="0,0,15,0"/>
            <Setter Property="Width" Value ="50" />
            <Setter Property="Height" Value ="25"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                 BorderThickness="1,1,1,1"
                                 BorderBrush="#ff3691d1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#ff3691d1"/>
                                <Setter TargetName="border" Property="Background" Value="green"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="Foreground" Value="#ff3691d1"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key ="userControlDeleteStyle" TargetType="Button">
            <Setter Property="Foreground" Value="#ff3691d1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="FontSize" Value ="9"/>
            <Setter Property="Margin" Value ="0,0,15,0"/>
            <Setter Property="Width" Value ="50" />
            <Setter Property="Height" Value ="25"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                 BorderThickness="1,1,1,1"
                                 BorderBrush="#ff3691d1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#ff3691d1"/>
                                <Setter TargetName="border" Property="Background" Value="red"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="Foreground" Value="#ff3691d1"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key ="userControlUpdateStyle" TargetType="Button">
            <Setter Property="Foreground" Value="#ff3691d1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="FontSize" Value ="9"/>
            <Setter Property="Margin" Value ="0,0,15,0"/>
            <Setter Property="Width" Value ="50" />
            <Setter Property="Height" Value ="25"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                 BorderThickness="1,1,1,1"
                                 BorderBrush="#ff3691d1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#ff3691d1"/>
                                <Setter TargetName="border" Property="Background" Value="yellow"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="Foreground" Value="#ff3691d1"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--************Styles of winAddBook and winEscrowBook Window************-->

        <!-- Style of Text Boxes-->

        <Style x:Key="Add_Book_Style_TextBox" 
             TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Style of Combo Boxes-->        
        <!-- ComboBox Flat Style -->
        <!--Source: https://gist.github.com/hansmaad/9187633-->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Green"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="red"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Visible" Background="Red"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="Brown" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        
                <!--Blink Effect-->
        <!--Source:https://stackoverflow.com/questions/9257091/to-set-blinking-effect-on-button-in-xaml-->
        
        <Style x:Key="lbl_light_off" TargetType="Label"> <!--Target tipini değiştirerek resim dahil her şeye uygulayabiliriz.-->
            <Style.Triggers>
                <EventTrigger RoutedEvent="Label.Loaded">
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Opacity" RepeatBehavior="Forever" >
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2"/>
                        </Storyboard>
                        </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>



        <!-- End of Flat ComboBox -->
        <!-- DataGrid Styles -->
        
        
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <Setter Property="CellStyle" Value="{DynamicResource ColumnrowStyle}"/>
        </Style>

                <!--Data Grid Column Header Style-->
        <!-- Soruce: https://www.c-sharpcorner.com/UploadFile/nipuntomar/wpf-datagrid-style/-->
        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="37"/>
            <Setter Property="Background" Value="#FF134187"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="BorderBrush" Value="#FF134187"/>
            <Setter Property="BorderThickness" Value="4,0,0,0"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click and Group"/>
                </Trigger>
            </Style.Triggers>
            
        </Style>
                <!--Column style-->
        <Style x:Key="ColumnrowStyle" TargetType="DataGridCell">
            
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="4,0,0,0"/>
            <Setter Property="BorderBrush" Value="#eeeeee"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Foreground" Value="#FF042263"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#3168BC"/>
                    <Setter Property="BorderBrush" Value="#FF042263"/>
                    <Setter Property="Foreground" Value= "White"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </Application.Resources>
</Application>
